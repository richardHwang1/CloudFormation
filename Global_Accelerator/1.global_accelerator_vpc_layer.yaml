---
AWSTemplateFormatVersion: "2010-09-09"
Description: Default VPC stack for the Global Accelerator Project

Parameters:
  ProjectName:
    Type: String
    Description: Project Name
  RegionName:
    Type: String
    Description: Region Name
  MyPubIp:
    Type: String
    Description: My Public IP Address
    Default: 0.0.0.0/0

Mappings:
  CidrMap:
    ap-northeast-2:
      VpcCidr: 172.16.0.0/16
      PubSn1Cidr: 172.16.1.0/24
      PubSn2Cidr: 172.16.2.0/24
      WebSn3Cidr: 172.16.3.0/24
      WebSn4Cidr: 172.16.4.0/24
    sa-east-1:
      VpcCidr: 172.17.0.0/16
      PubSn1Cidr: 172.17.1.0/24
      PubSn2Cidr: 172.17.2.0/24
      WebSn3Cidr: 172.17.3.0/24
      WebSn4Cidr: 172.17.4.0/24     
  AmiMap:
    ap-northeast-2:
      Ami: ami-07d737d4d8119ad79
    sa-east-1:
      Ami: ami-07a943af5a5ec252b

Conditions:
  CreateSgIngress: !Equals [!Ref "AWS::Region", ap-northeast-2]

Resources:
# VPC & Internet Gateway
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-vpc"

  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-igw"

  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc

# Ingress Public Subnet & Route Table
  PubSn1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn1Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-sn1"

  PubSn2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", PubSn2Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-sn2"

  PubRt12:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-pub-rt12"

  PubRt12Sn1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRt12
      SubnetId: !Ref PubSn1

  PubRt12Sn2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PubRt12
      SubnetId: !Ref PubSn2

  PubRt12DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: IgwAttachment
    Properties:
      RouteTableId: !Ref PubRt12
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw

# Web Private Subnet & Route Table
  WebSn3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", WebSn3Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-sn3"

  WebSn4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !FindInMap [CidrMap, !Ref "AWS::Region", WebSn4Cidr]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-sn4"

  WebRt34:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${RegionName}-web-rt34"

  WebRt34Sn3Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRt34
      SubnetId: !Ref WebSn3

  WebRt34Sn4Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRt34
      SubnetId: !Ref WebSn4

  WebRt34DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: NatInstance
    Properties:
      RouteTableId: !Ref WebRt34
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance

# Nat Instance & Security Group
  # KeyPair:
  #   Type: AWS::EC2::KeyPair
  #   Properties:
  #     KeyName: !Sub "${ProjectName}-${RegionName}-key"
  #     PublicKeyMaterial: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABA... rsa-key-xxxxxxxx

  NatInstanceSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: !Sub "${AWS::Region} Nat Instance Security Group"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !FindInMap [CidrMap, !Ref "AWS::Region", VpcCidr]
      Tags:
        - Key : Name
          Value : !Sub "${ProjectName}-${RegionName}-nat-instance-sg"

  NatInstanceSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CreateSgIngress
    Properties:
      GroupId: !GetAtt NatInstanceSg.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref MyPubIp

  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AmiMap, !Ref "AWS::Region", Ami]
      InstanceType: t2.micro
      # KeyName: !Ref KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !Ref NatInstanceSg
          SubnetId: !Ref PubSn1
      SourceDestCheck: false
      Tags:
        - Key : Name
          Value : !Sub "${ProjectName}-${RegionName}-nat-instance"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "p@ssw0rd" | passwd --stdin root
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
          sysctl -p /etc/sysctl.conf
          yum install -y iptables-services
          systemctl start iptables
          systemctl enable iptables
          iptables -F
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          service iptables save

# OutPuts
Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref Vpc
    Export:
      Name: VpcId
  PubSn1Id:
    Description: The Public Subnet1 ID
    Value: !Ref PubSn1
    Export:
      Name: PubSn1Id
  PubSn2Id:
    Description: The Public Subnet2 ID
    Value: !Ref PubSn2
    Export:
      Name: PubSn2Id
  WebSn3Id:
    Description: The Private Subnet3 ID
    Value: !Ref WebSn3
    Export:
      Name: WebSn3Id
  WebSn4Id:
    Description: The Private Subnet4 ID
    Value: !Ref WebSn4
    Export:
      Name: WebSn4Id
...